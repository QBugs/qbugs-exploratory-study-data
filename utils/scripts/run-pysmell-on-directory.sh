#!/usr/bin/env bash
#
# ------------------------------------------------------------------------------
# This script runs [PySmell](https://github.com/QBugs/PySmell) on all `.py` files
# in the provided directory and writes PySmell's output to the provided output file.
#
# Usage:
# run-pysmell-on-directory.sh
#   --directory_path <path>
#   --output_file_path <path>
#   [help]
# ------------------------------------------------------------------------------

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" > /dev/null 2>&1 && pwd)"
source "$SCRIPT_DIR/utils.sh" || exit 1

# ------------------------------------------------------------------------- Args

USAGE="Usage: ${BASH_SOURCE[0]} --directory_path <path> --output_file_path <path> [help]"
if [ "$#" -ne "1" ] && [ "$#" -ne "4" ]; then
  die "$USAGE"
fi

DIRECTORY_PATH=""
OUTPUT_FILE_PATH=""

while [[ "$1" = --* ]]; do
  OPTION=$1; shift
  case $OPTION in
    (--directory_path)
      DIRECTORY_PATH=$1;
      shift;;
    (--output_file_path)
      OUTPUT_FILE_PATH=$1;
      shift;;
    (--help)
      echo "$USAGE"
      exit 0
    (*)
      die "$USAGE";;
  esac
done

# Check whether all arguments have been initialized
[ "$DIRECTORY_PATH" != "" ]   || die "[ERROR] Missing --directory_path argument!"
[ "$OUTPUT_FILE_PATH" != "" ] || die "[ERROR] Missing --output_file_path argument!"
# Remove the output_file_path (if any)
rm -f "$OUTPUT_FILE_PATH"

# ------------------------------------------------------------------------- Main

PYSMELL_TMP_OUTPUT_DIR="$DIRECTORY_PATH/.pysmell"
rm -rf "$PYSMELL_TMP_OUTPUT_DIR"
mkdir -p "$PYSMELL_TMP_OUTPUT_DIR"

# Run [PySmell](https://github.com/QBugs/PySmell) on all `.py` files, in parallel
# in case [GNU Parallel](https://www.gnu.org/software/parallel) is available
jobs_file="$PYSMELL_TMP_OUTPUT_DIR/gnu-parallel-jobs.txt"
rm -f "$jobs_file"

while read -r python_file; do
  echo "bash \"$SCRIPT_DIR/run-pysmell-on-file.sh\" \
      --file_path \"$python_file\" \
      --output_file_path \"$PYSMELL_TMP_OUTPUT_DIR/$(echo $RANDOM | md5sum | cut -f1 -d' ').csv\" || die \"[ERROR] Failed to run pysmell on $python_file!\"" >> "$jobs_file"
done < <(find "$DIRECTORY_PATH" -type f -name "*.py")

if man parallel > /dev/null 2>&1; then
  parallel --progress -j $(cat /proc/cpuinfo | grep 'cpu cores' | sort -u | cut -f2 -d':' | cut -f2 -d' ') -a "$jobs_file" || die "[ERROR] Failed to run all jobs in $jobs_file using GNU Parallel!"
else
  while read -r job; do
    echo "[DEBUG] Running $job"
    bash $(echo "$job" | sed 's/^bash //') || die "[ERROR] Failed to run $job!"
  done < <(cat "$jobs_file")
fi

# Collect all data generated by [PySmell](https://github.com/QBugs/PySmell) in
# a single file
find "$PYSMELL_TMP_OUTPUT_DIR" -type f -name "*.csv" | head -n1 | xargs head -n1 > "$OUTPUT_FILE_PATH"
find "$PYSMELL_TMP_OUTPUT_DIR" -type f -name "*.csv" -exec tail -n +2 {} \;     >> "$OUTPUT_FILE_PATH"
[ -s "$OUTPUT_FILE_PATH" ] || die "[ERROR] $OUTPUT_FILE_PATH does not exist or it is empty!"

echo "DONE!"
exit 0

# EOF
